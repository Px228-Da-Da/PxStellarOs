from PyQt6.QtCore import QTimer, QTime, QDate, QPropertyAnimation, QEasingCurve, QRect  # –î–æ–±–∞–≤–ª–µ–Ω QPropertyAnimation –∏ QEasingCurve
from PyQt6.QtWidgets import (
    QApplication, QMainWindow, QVBoxLayout, QPushButton, QWidget, QHBoxLayout, QFrame, QLabel, QMessageBox, QStackedWidget, QMenuBar, QToolBar, QLineEdit, QTabWidget, QMenu
)
from PyQt6.QtGui import QKeyEvent
from PyQt6.QtCore import Qt, QSize, QUrl, QPoint
from PyQt6.QtGui import QIcon, QPixmap, QMouseEvent, QColor, QPainter, QBrush, QFont
from PyQt6.QtWebEngineWidgets import QWebEngineView
import sys
from PyQt6.QtGui import QAction

from PyQt6.QtCore import QTimer, QTime, QDate
from PyQt6.QtGui import QAction, QFont
from PyQt6.QtWidgets import QLabel, QMenuBar

from PyQt6.QtWidgets import QApplication, QMainWindow, QTabWidget, QWidget, QVBoxLayout, QTextEdit, QLineEdit, QPushButton, QHBoxLayout
from PyQt6.QtCore import QProcess

from PyQt6.QtWidgets import QApplication, QMainWindow, QTabWidget, QWidget, QVBoxLayout, QTextEdit, QLineEdit, QPushButton, QHBoxLayout
from PyQt6.QtCore import QProcess

import os

from PyQt6.QtWidgets import QHBoxLayout, QLabel  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ QLabel –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω

class DraggableResizableWindow(QFrame):
    def __init__(self, parent=None, window_name=""):
        super().__init__(parent)
        self.parent_window = parent  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.window_name = window_name  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –æ–∫–Ω–∞

        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)
        self.setAttribute(Qt.WidgetAttribute.WA_StyledBackground, True)
        self.setStyleSheet("background-color: rgba(50, 50, 50, 220); border-radius: 15px;")
        self.old_pos = None
        self.resizing = False
        self.minimized = False  # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–≤—ë—Ä–Ω—É—Ç–æ—Å—Ç–∏

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        self.setMinimumSize(100, 70)  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∏ –≤—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞

        # –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.title_bar = QFrame(self)
        self.title_bar.setFixedHeight(38)
        self.title_bar.setStyleSheet("background-color: #3A3A3A; border-top-left-radius: 15px; border-top-right-radius: 15px;")
        title_layout = QHBoxLayout(self.title_bar)
        title_layout.setContentsMargins(10, 5, 10, 5)  # –û—Ç—Å—Ç—É–ø—ã –≤–Ω—É—Ç—Ä–∏ –ø–∞–Ω–µ–ª–∏
        title_layout.setSpacing(8)  # –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.close_button = QPushButton("‚úñ")
        self.close_button.setFixedSize(20, 20)
        self.close_button.setStyleSheet("background-color: red; border-radius: 10px;")
        self.close_button.clicked.connect(self.close_window)

        self.minimize_button = QPushButton("‚ûñ")
        self.minimize_button.setFixedSize(20, 20)
        self.minimize_button.setStyleSheet("background-color: yellow; border-radius: 10px;")
        self.minimize_button.clicked.connect(self.minimize_window)

        self.maximize_button = QPushButton("üóñ")
        self.maximize_button.setFixedSize(20, 20)
        self.maximize_button.setStyleSheet("background-color: green; border-radius: 10px;")
        self.maximize_button.clicked.connect(self.toggle_maximize_restore)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        title_layout.addWidget(self.close_button)
        title_layout.addWidget(self.minimize_button)
        title_layout.addWidget(self.maximize_button)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        self.title_widgets_container = QWidget()  # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∏–¥–∂–µ—Ç–æ–≤
        self.title_widgets_layout = QHBoxLayout(self.title_widgets_container)
        self.title_widgets_layout.setContentsMargins(0, 0, 0, 0)  # –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        self.title_widgets_layout.setSpacing(10)  # –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏

        # –ü—Ä–∏–º–µ—Ä: –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
        self.title_label = QLabel(window_name)  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
        self.title_label.setStyleSheet("color: white; font-size: 14px;")
        self.title_widgets_layout.addWidget(self.title_label)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤ title_layout
        title_layout.addWidget(self.title_widgets_container)

        # –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
        title_layout.addStretch()

        self.title_bar.setLayout(title_layout)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout –æ–∫–Ω–∞
        self.main_layout = QVBoxLayout(self)
        self.main_layout.setContentsMargins(0, 0, 0, 0)  # –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –≤–æ–∫—Ä—É–≥ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ layout
        self.main_layout.setSpacing(0)  # –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        self.main_layout.addWidget(self.title_bar)
        self.content_area = QFrame(self)
        self.content_area.setStyleSheet("background-color: #222; border-bottom-left-radius: 15px; border-bottom-right-radius: 15px;")
        self.main_layout.addWidget(self.content_area)
        self.content_layout = QVBoxLayout(self.content_area)
        self.content_layout.setContentsMargins(8, 8, 8, 8)  # –û—Ç—Å—Ç—É–ø—ã –≤–Ω—É—Ç—Ä–∏ content_area
        self.content_area.setLayout(self.content_layout)

    def add_title_widget(self, widget):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –≤–∏–¥–∂–µ—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ (—Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è).
        """
        self.title_widgets_layout.addWidget(widget)

    def minimize_window(self):
        """
        –ê–Ω–∏–º–∞—Ü–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞ (–≤–Ω–∏–∑).
        """
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞ –≤–Ω–∏–∑
        self.animation = QPropertyAnimation(self, b"geometry")
        self.animation.setDuration(150)  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        self.animation.setEasingCurve(QEasingCurve.Type.OutQuad)  # –ü–ª–∞–≤–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ü–µ

        # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞
        start_rect = self.geometry()
        # –ö–æ–Ω–µ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞ (–∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —ç–∫—Ä–∞–Ω–∞ –≤–Ω–∏–∑)
        screen_height = QApplication.primaryScreen().geometry().height()
        end_rect = QRect(start_rect.x(), screen_height, start_rect.width(), start_rect.height())

        self.animation.setStartValue(start_rect)
        self.animation.setEndValue(end_rect)
        self.animation.finished.connect(self._on_minimize_animation_finished)  # –°–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        self.animation.start()


    def _on_minimize_animation_finished(self):
        """
        –°–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è.
        """
        self.hide()
        self.minimized = True
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ
        if self.parent_window and hasattr(self.parent_window, "update_win_menu"):
            self.parent_window.update_win_menu("desktop")
        else:
            print("–û—à–∏–±–∫–∞: `parent_window` –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ `update_win_menu` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")


    def close_window(self):
        """
        –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ (–≤–≤–µ—Ä—Ö).
        """
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞ –≤–≤–µ—Ä—Ö
        self.animation = QPropertyAnimation(self, b"geometry")
        self.animation.setDuration(150)  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        self.animation.setEasingCurve(QEasingCurve.Type.OutQuad)  # –ü–ª–∞–≤–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ü–µ

        # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞
        start_rect = self.geometry()
        # –ö–æ–Ω–µ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞ (–∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —ç–∫—Ä–∞–Ω–∞ –≤–≤–µ—Ä—Ö)
        end_rect = QRect(start_rect.x(), -start_rect.height(), start_rect.width(), start_rect.height())

        self.animation.setStartValue(start_rect)
        self.animation.setEndValue(end_rect)
        self.animation.finished.connect(self._on_close_animation_finished)  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        self.animation.start()

    def _on_close_animation_finished(self):
        """
        –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏.
        """
        window_name = None
        for name, window in self.parent().open_windows.items():
            if window == self:
                window_name = name
                break

        if window_name:
            self.parent().active_windows[window_name] = False
            self.parent().update_dock_indicators()
            self.parent().open_windows[window_name] = None  # –£–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–µ –æ–∫–Ω–æ

        self.hide()  # –°–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ
        if self.parent_window and hasattr(self.parent_window, "update_win_menu"):
            self.parent_window.update_win_menu("desktop")
        else:
            print("–û—à–∏–±–∫–∞: `parent_window` –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ `update_win_menu` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
        self.setParent(None)  # –£–±–∏—Ä–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è
        self.deleteLater()  # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç

    def set_content(self, widget):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –æ–∫–Ω–æ.
        """
        for i in reversed(range(self.content_layout.count())):
            self.content_layout.itemAt(i).widget().setParent(None)

        self.content_layout.addWidget(widget)

    def toggle_maximize_restore(self):
        if self.isMaximized():
            self.showNormal()  # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        else:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞
            screen_geometry = QApplication.primaryScreen().availableGeometry()

            # –£—á–∏—Ç—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –∏ –¥–æ–∫-–ø–∞–Ω–µ–ª–∏
            top_bar_height = 30  # –í—ã—Å–æ—Ç–∞ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏
            dock_height = 0  # –í—ã—Å–æ—Ç–∞ –¥–æ–∫-–ø–∞–Ω–µ–ª–∏
            top_offset = 33  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞ —Å —É—á–µ—Ç–æ–º –ø–∞–Ω–µ–ª–µ–π –∏ –æ—Ç—Å—Ç—É–ø–∞ —Å–≤–µ—Ä—Ö—É
            available_height = screen_geometry.height() - top_bar_height - dock_height - top_offset
            self.setGeometry(screen_geometry.x(), screen_geometry.y() + top_offset, screen_geometry.width(), available_height)

        self.raise_()  # –ü–æ–¥–Ω—è—Ç—å –æ–∫–Ω–æ –Ω–∞ –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if self.parent_window and hasattr(self.parent_window, "update_win_menu"):
            self.parent_window.update_win_menu(self.window_name)
        else:
            print("–û—à–∏–±–∫–∞: `parent_window` –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ `update_win_menu` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")

    def mousePressEvent(self, event: QMouseEvent):
        if event.button() == Qt.MouseButton.LeftButton:
            if event.pos().y() < 30:  # –ó–∞—Ö–≤–∞—Ç –∑–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫
                self.old_pos = event.globalPosition().toPoint()
            elif event.pos().x() > self.width() - 10 and event.pos().y() > self.height() - 10:
                self.resizing = True

        self.raise_()  # –ü–æ–¥–Ω–∏–º–µ—Ç –æ–∫–Ω–æ –Ω–∞ –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –º—ã—à–∏

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ
        if self.parent_window and hasattr(self.parent_window, "update_win_menu"):
            self.parent_window.update_win_menu(self.window_name)
        else:
            print("–û—à–∏–±–∫–∞: `parent_window` –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ `update_win_menu` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")

    def mouseMoveEvent(self, event: QMouseEvent):
        if self.old_pos and not self.resizing:
            delta = event.globalPosition().toPoint() - self.old_pos
            self.move(self.x() + delta.x(), self.y() + delta.y())
            self.old_pos = event.globalPosition().toPoint()

        elif self.resizing:
            self.resize(event.pos().x(), event.pos().y())

        self.raise_()  # –ü–æ–¥–Ω–∏–º–∞–µ–º –æ–∫–Ω–æ –Ω–∞ –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ
        if self.parent_window and hasattr(self.parent_window, "update_win_menu"):
            self.parent_window.update_win_menu(self.window_name)
        else:
            print("–û—à–∏–±–∫–∞: `parent_window` –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ `update_win_menu` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")

    def mouseReleaseEvent(self, event: QMouseEvent):
        self.old_pos = None
        self.resizing = False

    def update_win_menu(self, window_name):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –º–µ–Ω—é "Win" –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ.
        """
        self.win_menu.setTitle(window_name)
    
    def restore_window(self):
        """
        –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–∫–Ω–æ –ø–æ—Å–ª–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è.
        """
        if self.minimized:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ
            self.show()
            self.minimized = False

            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
            screen_geometry = QApplication.primaryScreen().geometry()
            start_rect = QRect(self.x(), screen_geometry.height(), self.width(), self.height())
            end_rect = QRect(self.x(), screen_geometry.height() // 2 - self.height() // 2, self.width(), self.height())

            # –ê–Ω–∏–º–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞
            self.animation = QPropertyAnimation(self, b"geometry")
            self.animation.setDuration(150)  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
            self.animation.setEasingCurve(QEasingCurve.Type.OutQuad)  # –ü–ª–∞–≤–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ü–µ
            self.animation.setStartValue(start_rect)
            self.animation.setEndValue(end_rect)
            self.animation.start()

    def toggle_window(self):
        """
        –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∫–Ω–∞: —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç.
        """
        if self.minimized:
            self.restore_window()
        else:
            self.minimize_window()
